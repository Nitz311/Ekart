pipeline {
    agent any
    tools{
        maven 'maven3'
        jdk 'jdk17'
    }
    
    environment{
        SCANNER_HOME= tool "sonar-scanner"
    }

    stages {
        stage('Git checkout') {
            steps {
             git branch: 'main', url: 'https://github.com/Nitz311/Ekart.git'
            }
        }
         stage('compile') {
            steps {
             sh 'mvn compile'
            }
        }
       
         stage('unit test') {
            steps {
             sh 'mvn test -DskipTests=true'
            }
        }
         stage('sonarqube analysis') {
            steps {
             withSonarQubeEnv('sonar') {
             sh '''
                $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=EKART -Dsonar.projectName=EKART \
                -Dsonar.java.binaries=.
               '''
                }
            }
        }
        stage('OWASP Dependency check') {
            steps {
             dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DC'
             dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('OWASP Dependency') {
            steps {
             sh 'mvn compile'
            }
        }
        stage('Build') {
            steps {
             sh 'mvn package -DskipTests=true'
            }
        }
        stage('Deploy to nexus') {
            steps {
             withMaven(globalMavenSettingsConfig: 'global-maven', jdk: 'jdk17', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
          sh 'mvn deploy -DskipTests=true'
                }
            }
        }
        
  }
}
